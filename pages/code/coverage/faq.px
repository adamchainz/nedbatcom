<?xml version="1.0" encoding="utf-8" ?>

<page title='FAQ and other help' >

  <history>
<what when='20090613T141800'>brand new docs.</what>
<what when='20091005T073900'>updated for 3.1.</what>
<what when='20091127T201500'>updated for 3.2.</what>
<what when='20110605T175500'>add the announcement mailing list.</what>
</history>
<h1>Frequently asked questions</h1>
<p><strong>Q: I use nose to run my tests, and its cover plugin doesn&#8217;t let me create
HTML or XML reports.  What should I do?</strong></p>
<p>First run your tests and collect coverage data with <a class="reference external" href="http://somethingaboutorange.com/mrl/projects/nose">nose</a> and its plugin.
This will write coverage data into a .coverage file.  Then run coverage.py from
the <a class="reference internal" href="/code/coverage/cmd.html#cmd"><em>command line</em></a> to create the reports you need from that data.</p>
<p><strong>Q: Why do unexecutable lines show up as executed?</strong></p>
<p>Usually this is because you&#8217;ve updated your code and run coverage on it
again without erasing the old data.  Coverage records line numbers executed, so
the old data may have recorded a line number which has since moved, causing
coverage to claim a line has been executed which cannot be.</p>
<p>If you are using the <tt class="docutils literal"><span class="pre">-x</span></tt> command line action, it doesn&#8217;t erase first by
default.  Switch to the <tt class="docutils literal"><span class="pre">coverage</span> <span class="pre">run</span></tt> command, or use the <tt class="docutils literal"><span class="pre">-e</span></tt> switch to
erase all data before starting the next run.</p>
<p><strong>Q: Why do the bodies of functions (or classes) show as executed, but the def
lines do not?</strong></p>
<p>This happens because coverage is started after the functions are defined.  The
definition lines are executed without coverage measurement, then coverage is
started, then the function is called.  This means the body is measured, but
the definition of the function itself is not.</p>
<p>To fix this, start coverage earlier.  If you use the <a class="reference internal" href="/code/coverage/cmd.html#cmd"><em>command line</em></a>
to run your program with coverage, then your entire program will be monitored.
If you are using the <a class="reference internal" href="/code/coverage/api.html#api"><em>API</em></a>, you need to call coverage.start() before
importing the modules that define your functions.</p>
<p><strong>Q: Does coverage.py work on Python 3.x?</strong></p>
<p>Yes, Pythons 3.1 and 3.2 are fully supported.</p>
<p><strong>Q: Isn&#8217;t coverage testing the best thing ever?</strong></p>
<p>It&#8217;s good, but <a class="reference external" href="http://nedbatchelder.com/blog/200710/flaws_in_coverage_measurement.html">it isn&#8217;t perfect</a>.</p>
<p><strong>Q: Where can I get more help with coverage.py?</strong></p>
<p>You can discuss coverage.py or get help using it on the <a class="reference external" href="http://lists.idyll.org/listinfo/testing-in-python">Testing In Python</a>
mailing list.</p>
<p>Bug reports are gladly accepted at the <a class="reference external" href="http://bitbucket.org/ned/coveragepy/issues">Bitbucket issue tracker</a>.</p>
<p>Announcements of new coverage.py releases are sent to the
<a class="reference external" href="http://groups.google.com/group/coveragepy-announce">coveragepy-announce</a> mailing list.</p>
<p><a class="reference external" href="http://nedbatchelder.com/site/aboutned.html">I can be reached</a> in a number of ways, I&#8217;m happy to answer questions about
using coverage.py.  I&#8217;m also available hourly for consultation or custom
development.</p>
<h1>History</h1>
<p>Coverage.py was originally written by <a class="reference external" href="http://garethrees.org/">Gareth Rees</a>.
Since 2004, <a class="reference external" href="http://nedbatchelder.com">Ned Batchelder</a> has extended and maintained it with the help of
<a class="reference external" href="http://bitbucket.org/ned/coveragepy/src/tip/AUTHORS.txt">many others</a>.  The <a class="reference internal" href="/code/coverage/changes.html#changes"><em>change history</em></a> has all the details.</p>


<p class='pmn pmnbot'>
    <span class='p'>&#xab;&#xa0;<i>Previous:</i> <a href="/code/coverage/api.html" title="previous topic">Coverage API</a></span>
    <span class='n'><i>Next:</i> <a href="/code/coverage/changes.html" title="next topic">Major change history for coverage.py</a>&#xa0;&#xbb;</span>
</p>

</page>